import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer


# Crear un DataFrame con los datos del metro de Medellín
data = {
    "Estacion": ["Niquía - La Estrella", "San Antonio - San Javier", "Oriente - Villa Sierra", "San Javier - La Aurora", "Acevedo - Santo Domingo"],
    "Hora Pico AM (Entrada)": [35555, 35555, 35555, 35555, 35555],
    "Hora Pico AM (Salida)": [17000, 17000, 17000, 17000, 17000],
    "Hora Pico PM (Entrada)": [25000, 25000, 25000, 25000, 25000],
    "Hora Pico PM (Salida)": [40376, 40376, 40376, 40376, 40376],
    "Número de Pasajeros Diario": [65376, 65376, 65376, 65376, 65376],
    "Tarifa Promedio (pesos)": [3200, 3200, 3200, 3200, 3200]
}

df = pd.DataFrame(data)
print (df)


# Definir las columnas categóricas y numéricas
categorical_columns = ['Estacion']
numerical_columns = [col for col in df.columns if col not in categorical_columns + ['Tarifa Promedio (pesos)']]


# Crear el transformador de columnas con OneHotEncoder para las categóricas
column_transformer = ColumnTransformer(
    transformers=[
        ('categorical', OneHotEncoder(), categorical_columns),
        ('numerical', 'passthrough', numerical_columns)
    ]
)


# Aplicar la transformación y dividir los datos
X = column_transformer.fit_transform(df.drop('Tarifa Promedio (pesos)', axis=1))
y = df['Tarifa Promedio (pesos)'].values


# Dividir los datos en conjuntos de entrenamiento y prueba
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# Crear y entrenar el modelo
modelo = LinearRegression()
modelo.fit(X_train, y_train)
print (modelo)

# Evaluar el modelo
score = modelo.score(X_test, y_test)
print(f'Precisión del modelo: {score:.2f}')
